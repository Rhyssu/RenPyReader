@page "/fileUploadHandler"
@using RenPyReader.Components.Shared
@inject IJSRuntime JSRuntime

<div class="file-handler-wrapper">
    <div class="file-handler-column small-column">
        <DatabaseHandler @ref="_databaseHandler" 
            LogBuffer="_logBuffer" />
        <FilePropertyHandler @ref="_nameHandler" 
            Label="ZIP archive name:" 
            Hint="Hint: Use upload button to select archive file."/>
        <hr />
        <div class="file-handler-buttons-wrapper">
            <Button Color="ButtonColor.Secondary"
                    Outline="true"
                    Disabled="_isWorking"
                    @onclick="async () => await HandleFilePickerAsync()">
                Upload
            </Button>
            <Button Color="ButtonColor.Secondary"
                    Outline="true"
                    Disabled="!IsFileSelected"
                    @onclick="async () => await ProcessEntriesAsync()">
                Process
            </Button>
            <Button Color="ButtonColor.Secondary"
                    Outline="true"
                    Disabled="!IsFileSelected">
                StopProcessing
            </Button>
        </div>
        <hr />
        <FilePropertyHandler Label="Processed image files:" />
        <FilePropertyHandler Label="Processed audio files:" />
        <FilePropertyHandler Label="Processed RenPy files:" />
        <hr />
        <ProgressBarHandler @ref="_progressBarHandler" />
    </div>
    <div class="file-handler-column small-column entry-list">
        <EntryListHandler @ref="_entryListHandler" />
    </div>
    <div class="file-handler-column medium-column log-buffer">
        <div class="file-handler-process-output">
            @if (_logBuffer != null)
            {
                foreach (var message in _logBuffer.GetMessages())
                {
                    <div class="file-handler-process-output-message">
                        @message
                    </div>
                }
            }
        </div>
    </div>
</div>